<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OOP Tutorial on Course OOP</title>
    <link>https://altmanea.ru/oop/</link>
    <description>Recent content in OOP Tutorial on Course OOP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://altmanea.ru/oop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1. Kotlin basic</title>
      <link>https://altmanea.ru/oop/lab/basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/oop/lab/basic/</guid>
      <description>Theory Slides
Task The purpose of the task is to introduce to the Kotlin language. The object of the task is a program for searching anagrams. Anagrams are words with the same letters, but arranged in varied order, for example, «restful» — «fluster». The program should include several functions, that prepares a list of the words for fast searching. The list of the words can be obtained here (file «20k.</description>
    </item>
    
    <item>
      <title>2. Object</title>
      <link>https://altmanea.ru/oop/lab/object/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/oop/lab/object/</guid>
      <description>Theory Slides
Task Build a «tictactoe» game.
The game board should be created by using JPanel() container with layout = Gridlayout(3,3). Cells of a game board should be implemented by the objects of the JButton type.
A variable &amp;ldquo;symbol&amp;rdquo; should keep a symbol of current player (&amp;ldquo;X&amp;rdquo; or &amp;ldquo;O&amp;rdquo;). Clicking on the button with the empty text field should lead to write the symbol of the current player to the button&amp;rsquo;s text field and to change this symbol.</description>
    </item>
    
    <item>
      <title>3 Class basic</title>
      <link>https://altmanea.ru/oop/lab/class_basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/oop/lab/class_basic/</guid>
      <description>Theory Slides Initial source code
Task   Create class &#34;Controller&#34;: class Controller( var state: State = State() ) { val view = View(this) var checkedCell: Int? = null   Update classes &#34;Game&#34; and &#34;View&#34; to work with &#34;Controller&#34;. By updating class &#34;View&#34;, set a background of the buttons as on the chessboard. If &#34;checkedCell&#34; field of an object of the class &#34;Controller&#34; was set, the background of the corresponding button should be set to some color.</description>
    </item>
    
    <item>
      <title>4 Collections</title>
      <link>https://altmanea.ru/oop/lab/collections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://altmanea.ru/oop/lab/collections/</guid>
      <description>Theory Example project
Task  Improve class Board with adding a collection of neighbors sets for each cell of the board. The collection is made using getNeighbors function when a object of the board class is being initialized. Update classes that use the getNeighbors function and run all tests. Improve class Dict with a getWords function that returns a list of words that contain a passed to the function substring.</description>
    </item>
    
  </channel>
</rss>